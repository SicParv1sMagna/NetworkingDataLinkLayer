// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/channel/code": {
            "post": {
                "description": "Кодирует и декодирует полученный в виде байт сегмент, вносит ошибку, исправляет ее, так же с вероятностью возвращает сегмент на траспортный уровень.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Code"
                ],
                "summary": "EncodeSegmentSimulate.",
                "parameters": [
                    {
                        "description": "Пользовательский объект в формате JSON",
                        "name": "segment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/segment.Segment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ"
                    },
                    "400": {
                        "description": "Ошибка в запросе",
                        "schema": {
                            "$ref": "#/definitions/swag.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/swag.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "segment.Segment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "2024-03-09T12:04:08Z"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        116,
                        104,
                        105,
                        115,
                        32,
                        105,
                        115,
                        32,
                        97,
                        32,
                        98,
                        121,
                        116,
                        101,
                        32,
                        97,
                        114,
                        114,
                        97,
                        121,
                        32,
                        111,
                        102,
                        32,
                        98,
                        121,
                        116,
                        101,
                        115
                    ]
                },
                "segment_number": {
                    "type": "integer",
                    "example": 1
                },
                "sender_name": {
                    "type": "string",
                    "example": "Марк Гревцов"
                },
                "total_segments": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "swag.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
